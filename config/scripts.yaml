restart_pi_docker:
  alias: Restart Pi Docker
  sequence:
  - service: shell_command.pidocker_restart
    data: {}
  mode: single
  icon: mdi:reload
purge_dockerlog:
  alias: Purge docker log
  sequence:
  - service: shell_command.purge_dockerlog
    data: {}
  mode: single
  icon: mdi:archive-remove
samsung_turn_on_off:
  alias: SAMSUNG turn on off
  sequence:
  - if:
    - condition: state
      entity_id: media_player.bedroom_tv
      state: 'off'
    then:
    - service: media_player.turn_on
      data: {}
      target:
        entity_id: media_player.bedroom_tv
    else:
    - service: media_player.turn_off
      data: {}
      target:
        entity_id: media_player.bedroom_tv
  mode: single
  icon: mdi:power
atv_sleep:
  alias: ATV Sleep
  sequence:
  - service: remote.send_command
    data:
      command:
      - home_hold
      - select
      delay_secs: 1
    target:
      entity_id: remote.atv
    enabled: false
  - service: media_player.turn_off
    target:
      entity_id: media_player.atv
    data: {}
    enabled: false
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: media_player.atv
        attribute: app_id
        state: com.google.ios.youtube
      - condition: state
        entity_id: media_player.atv
        attribute: app_id
        state: org.xbmc.kodi-tvos
    then:
    - service: script.atv_quit
      data: {}
    - service: remote.turn_off
      data: {}
      target:
        entity_id: remote.sony_bravia_tv
    else:
    - service: remote.turn_off
      data: {}
      target:
        entity_id: remote.sony_bravia_tv
  mode: single
  icon: mdi:power
apple_tv_power:
  alias: Apple TV Power
  sequence:
  - service: remote.send_command
    data:
      command:
      - home_hold
      - select
      delay_secs: 1
    target:
      entity_id: remote.atv
  mode: single
  icon: mdi:power
tv_volume_up:
  alias: ATV Volume up
  sequence:
  - service: media_player.volume_up
    data: {}
    target:
      entity_id: media_player.living_room_tv
  mode: single
  icon: mdi:volume-plus
tv_volume_down:
  alias: ATV Volume down
  sequence:
  - service: media_player.volume_down
    data: {}
    target:
      entity_id: media_player.living_room_tv
  mode: single
  icon: mdi:volume-minus
atv_turn_on_off:
  alias: ATV Turn on off
  sequence:
  - if:
    - condition: state
      entity_id: media_player.living_room_tv
      state: 'off'
    then:
    - service: media_player.turn_on
      data: {}
      target:
        entity_id: media_player.living_room_tv
    else:
    - service: media_player.turn_off
      data: {}
      target:
        entity_id: media_player.living_room_tv
  mode: single
  icon: mdi:power
vacuum_notify:
  alias: Vacuum Notify
  mode: queued
  icon: mdi:vacuum
  description: Send a pushover notification
  fields:
    title:
      description: The title of the notification
      example: State change
    message:
      description: The message content
      example: The light is on!
    data:
      description: The data content
      example: icons push sound
  sequence:
  - service: notify.mobile_app_viet_ngoc
    data:
      title: '{{ title }}'
      message: '{{ message }}'
zuzu_entities:
  alias: zuzu entities
  sequence:
  - parallel:
    - service: homeassistant.update_entity
      data: {}
      target:
        entity_id:
        - sensor.gle
        - device_tracker.findmy_d098350b38e241d3972ad394a27f38b6
  mode: single
atv_quit:
  alias: Atv quit
  sequence:
  - service: remote.send_command
    data:
      num_repeats: 1
      delay_secs: 0.4
      hold_secs: 0
      command:
      - home
      - top_menu
    target:
      entity_id: remote.atv
    enabled: true
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
    enabled: true
  - service: remote.send_command
    data:
      delay_secs: 0.2
      command:
      - home
      num_repeats: 2
    target:
      entity_id: remote.atv
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: remote.send_command
    data:
      num_repeats: 1
      delay_secs: 0.4
      hold_secs: 0
      command:
      - left
    target:
      entity_id: remote.atv
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: remote.send_command
    data:
      delay_secs: 0.2
      command:
      - up
      num_repeats: 2
    target:
      entity_id: remote.atv
  - service: remote.send_command
    data:
      num_repeats: 1
      delay_secs: 0.4
      hold_secs: 0
      command:
      - left
    target:
      entity_id: remote.atv
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: remote.send_command
    data:
      delay_secs: 0.2
      command:
      - up
      num_repeats: 2
    target:
      entity_id: remote.atv
  - service: remote.send_command
    data:
      num_repeats: 1
      delay_secs: 0.4
      hold_secs: 0
      command:
      - left
    target:
      entity_id: remote.atv
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: remote.send_command
    data:
      delay_secs: 0.2
      command:
      - up
      num_repeats: 2
    target:
      entity_id: remote.atv
  - service: remote.send_command
    data:
      num_repeats: 1
      delay_secs: 0.4
      hold_secs: 0
      command:
      - top_menu
    target:
      entity_id: remote.atv
  mode: single
fade_music:
  alias: Fade the volume of a media player
  mode: parallel
  fields:
    target_player:
      name: Target media player
      description: Target media player of volume fade.
      required: true
      example: media_player.spotify
      selector:
        entity:
          domain: media_player
    target_volume:
      name: Target volume
      description: Volume the media play will be at the end of the fade duration.
      required: true
      default: 0.5
      example: '0.5'
      selector:
        number:
          max: 1
          min: 0
          step: 0.01
          mode: slider
    duration:
      name: Fade duration
      description: Length of time in seconds the fade should take.
      required: true
      default: 5
      example: '5'
      selector:
        number:
          mode: box
          min: 0
          max: 100000
          unit_of_measurement: s
    curve:
      name: Fade curve algorithm
      description: Shape of the fade curve to apply.
      required: true
      default: logarithmic
      example: logarithmic
      selector:
        select:
          options:
          - logarithmic
          - bezier
          - linear
  variables:
    steps_per_second: 10
    total_steps: '{{ (steps_per_second * duration) | int(0) }}'
    start_volume: '{{ state_attr(target_player, ''volume_level'') | float(0) }}'
    start_diff: '{{ (target_volume - start_volume) | float(0) }}'
  sequence:
  - repeat:
      while:
      - condition: template
        value_template: '{{ repeat.index < total_steps }}'
      - condition: template
        value_template: '{{ ((state_attr(target_player, "volume_level") - target_volume)
          | abs) > 0.001 }}'
      sequence:
      - service: media_player.volume_set
        data_template:
          entity_id: '{{ target_player }}'
          volume_level: "{% set t = repeat.index / total_steps %} {% if curve == 'logarithmic'
            %}\n  {{ (start_volume + (t / (1 + (1 - t))) * start_diff) | float(0)
            }}\n{% elif curve == 'bezier' %}\n  {{ (start_volume + (t * t * (3 - 2
            * t)) * start_diff) | float(0) }}\n{% else %}\n  {{ (start_volume + t
            * start_diff) | float(0) }}\n{% endif %}\n"
      - delay: '00:00:00.1'
  - service: media_player.volume_set
    data_template:
      entity_id: '{{ target_player }}'
      volume_level: '{{ target_volume }}'
  icon: mdi:tune-vertical
morning_cover:
  alias: morning cover
  sequence:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: numeric_state
          entity_id: cover.living_room_cover
          below: 100
          attribute: current_tilt_position
          above: 0
        - condition: numeric_state
          entity_id: cover.living_room_cover
          below: 100
          attribute: current_position
          above: 0
      sequence:
      - service: cover.set_cover_tilt_position
        data:
          tilt_position: 100
        target:
          entity_id: cover.living_room_cover
    - conditions:
      - condition: numeric_state
        entity_id: cover.living_room_cover
        above: 0
        attribute: current_position
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.living_room_cover
      - wait_template: '{{ state_attr("cover.living_room_cover", "current_position")
          == 0 }}'
        continue_on_timeout: true
      - service: cover.set_cover_tilt_position
        data:
          tilt_position: 100
        target:
          entity_id: cover.living_room_cover
    - conditions:
      - condition: state
        entity_id: cover.living_room_cover
        state: closed
      - condition: template
        value_template: '{{ state_attr("cover.living_room_cover", "current_tilt_position")
          == 0 }}'
      sequence:
      - service: cover.set_cover_tilt_position
        data:
          tilt_position: 100
        target:
          entity_id: cover.living_room_cover
  mode: single
  icon: mdi:window-shutter
sony_kodi:
  alias: Sony Kodi
  sequence:
  - service: media_player.play_media
    target:
      entity_id: media_player.sony_bravia_tv
    data:
      media_content_id: com.sony.dtv.org.xbmc.kodi.org.xbmc.kodi.Splash
      media_content_type: app
    metadata:
      title: Kodi
      thumbnail: /api/media_player_proxy/media_player.sony_bravia_tv/browse_media/app/com.sony.dtv.org.xbmc.kodi.org.xbmc.kodi.Splash?token=19dfbdc46bb386e62043ad04e52fe924017b25b51b690470442047d5a6b75110
      media_class: app
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: apps
        media_content_id: apps
  mode: single
vacuum_download_map:
  alias: Download a map from the cloud
  mode: single
  icon: mdi:cloud-download-outline
  sequence:
  - service: homeassistant.update_entity
    data:
      entity_id: camera.roidmi_eve
  - delay: 00:00:02
  - service: homeassistant.update_entity
    data:
      entity_id: camera.roidmi_eve
  - delay: 00:00:02
  - service: homeassistant.update_entity
    data:
      entity_id: camera.roidmi_eve
  - delay: 00:00:02
  - service: homeassistant.update_entity
    data:
      entity_id: camera.roidmi_eve
vacuum_start_clean:
  alias: Cleaning rooms according to the list
  icon: mdi:delete-sweep-outline
  mode: single
  sequence:
  - condition: template
    value_template: '{% if is_state(''input_boolean.vacuum_room1'',''on'') or is_state(''input_boolean.vacuum_room2'',''on'')
      or is_state(''input_boolean.vacuum_room3'',''on'') or is_state(''input_boolean.vacuum_room4'',''on'')
      or is_state(''input_boolean.vacuum_room5'',''on'') or is_state(''input_boolean.vacuum_room6'',''on'')
      or is_state(''input_boolean.vacuum_room7'',''on'') or is_state(''input_boolean.vacuum_room8'',''on'')%}True{%
      else %}False{% endif %} '
  - service: script.turn_on
    entity_id: script.vacuum_clean_select_room
    data_template:
      variables:
        rooms: "{%- set text = '' -%}\n{%- if is_state('input_boolean.vacuum_room1','on')
          %}\n  {%- set text = '1' %}{% endif %}\n{%- if is_state('input_boolean.vacuum_room2','on')
          %}\n  {%- if text != '' %}{%- set text = text+',' %}{% endif %}\n  {%- set
          text = text+'2' %}{% endif %}\n{%- if is_state('input_boolean.vacuum_room3','on')
          %}\n  {%- if text != '' %}{%- set text = text+',' %}{% endif %}\n  {%- set
          text = text+'3' %}{% endif %}\n{%- if is_state('input_boolean.vacuum_room4','on')
          %}\n  {%- if text != '' %}{%- set text = text+',' %}{% endif %}\n  {%- set
          text = text+'4' %}{% endif %}\n{%- if is_state('input_boolean.vacuum_room5','on')
          %}\n  {%- if text != '' %}{%- set text = text+',' %}{% endif %}\n  {%- set
          text = text+'5' %}{% endif %}\n{%- if is_state('input_boolean.vacuum_room6','on')
          %}\n  {%- if text != '' %}{%- set text = text+',' %}{% endif %}\n  {%- set
          text = text+'6' %}{% endif %}\n{%- if is_state('input_boolean.vacuum_room7','on')
          %}\n  {%- if text != '' %}{%- set text = text+',' %}{% endif %}\n  {%- set
          text = text+'7' %}{% endif %}\n{%- if is_state('input_boolean.vacuum_room8','on')
          %}\n  {%- if text != '' %}{%- set text = text+',' %}{% endif %}\n  {%- set
          text = text+'8' %}{% endif %}\n{%- set text = '[2,\"{\\\\\"mapId\\\\\":1696538829,\\\\\"segmentId\\\\\":['
          + text + ']}\"]' %}\n{{text}}\n"
vacuum_clean_select_room:
  alias: Cleaning of selected rooms
  mode: single
  fields:
    rooms:
      description: Command with room numbers
      example: Specifies the full cleaning command of the room
  sequence:
  - service: xiaomi_miot.call_action
    data:
      entity_id: vacuum.roidmi_eve
      did: 558429891
      siid: 14
      aiid: 1
      params: '{{ rooms }}'
vacuum_start_clean_all:
  alias: Cleaning the entire apartment
  icon: mdi:vacuum-outline
  mode: single
  sequence:
  - service: vacuum.start
    data:
      entity_id: vacuum.roidmi_eve
vacuum_find_robot:
  alias: Robot locate
  icon: mdi:vacuum-outline
  mode: single
  sequence:
  - service: xiaomi_miot.call_action
    data:
      entity_id: vacuum.roidmi_eve
      did: 558429891
      siid: 8
      aiid: 1
vacuum_empty_bin:
  alias: Vacuum empty bin
  icon: mdi:vacuum-outline
  mode: single
  sequence:
  - if:
    - condition: state
      entity_id: vacuum.roidmi_eve
      state: docked
    then:
    - service: xiaomi_miot.call_action
      data:
        entity_id: vacuum.roidmi_eve
        did: 558429891
        siid: 8
        aiid: 6
    else:
    - service: vacuum.return_to_base
      data: {}
      target:
        entity_id: vacuum.roidmi_eve
    - wait_template: '{{ is_state(''vacuum.roidmi_eve'', ''docked'') }}'
      continue_on_timeout: true
    - service: xiaomi_miot.call_action
      data:
        entity_id: vacuum.roidmi_eve
        did: 558429891
        siid: 8
        aiid: 6
level:
  alias: Reset readings
  icon: mdi:backup-restore
  mode: single
  sequence:
  - service: xiaomi_miot.call_action
    data:
      entity_id: vacuum.roidmi_eve
      siid: 11
      aiid: 1
      params: []
      throw: false
  - delay: 00:20:00
vacuum_reset_brush_life_level_2:
  alias: Reset readings
  icon: mdi:backup-restore
  mode: single
  sequence:
  - service: xiaomi_miot.call_action
    data:
      entity_id: vacuum.roidmi_eve
      siid: 12
      aiid: 1
      params: []
      throw: false
  - delay: 00:20:00
vacuum_reset_brush_life_level_3:
  alias: Reset readings
  icon: mdi:backup-restore
  mode: single
  sequence:
  - service: xiaomi_miot.call_action
    data:
      entity_id: vacuum.roidmi_eve
      siid: 15
      aiid: 1
      params: []
      throw: false
  - delay: 00:20:00
vacuum_reset_filter_life_level:
  alias: Reset readings
  icon: mdi:backup-restore
  mode: single
  sequence:
  - service: xiaomi_miot.call_action
    data:
      entity_id: vacuum.roidmi_eve
      siid: 10
      aiid: 1
      params: []
      throw: false
  - delay: 00:20:00
homepod_alarm:
  alias: Homepod alarm
  sequence:
  - action: media_player.turn_on
    target:
      entity_id: media_player.bedroom
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - data:
      volume_level: 0.2
    action: media_player.volume_set
    target:
      entity_id: media_player.bedroom
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - data:
      media_content_id: library://playlist/33
      media_content_type: music
    metadata:
      title: My recommendation playlist
      thumbnail: https://mosaic.scdn.co/640/ab67616d00001e0253334ad518b8ba38211c320bab67616d00001e025675e83f707f1d7271e5cf8aab67616d00001e02c1b211b5fcdef31be5f806dfab67616d00001e02fc915b69600dce2991a61f13
      media_class: playlist
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: mass
        media_content_id: playlists
    target:
      entity_id: media_player.bedroom
    action: media_player.play_media
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - parallel:
    - data:
        target_volume: 0.7
        duration: 30
        curve: logarithmic
        target_player: media_player.bedroom
      action: script.fade_music
  mode: single
  icon: phu:homepod-mini
run_plugin:
  alias: run plugin
  sequence:
  - service: kodi.call_method
    metadata: {}
    data:
      method: Player.Open
      item:
        file: '{{ file }}'
    target:
      entity_id: media_player.kodi_atv
  mode: single
update_entitites:
  alias: update entitites
  sequence:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: '{%- for state in states if state.domain == "update" and state.state
        != "unavailable" -%} - {{ state.entity_id }} {%- endfor -%}

        '
  description: ''
  icon: mdi:update
