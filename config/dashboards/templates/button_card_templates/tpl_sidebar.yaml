#-
#      _     _      _
#  ___(_) __| | ___| |__   __ _ _ __
# / __| |/ _` |/ _ \ '_ \ / _` | '__|
# \__ \ | (_| |  __/ |_) | (_| | |
# |___/_|\__,_|\___|_.__/ \__,_|_|
#
#- from github.com/ngocjohn/hass-config
#
sidebar:
  show_state: false
  show_icon: false
  tap_action:
    action: none
  name: >
    [[[
      if (entity) {
          let attr = [];
          for (let [k, value] of Object.entries(entity.attributes))
              window.navigator.userAgent.match(/iPhone/i)
                  ? k !== 'time' && k !== 'date' && value !== false && (attr += `<p>${k === 'greet' ? `<span class="iphone">${value}</span>` : `${value}`}</p>`)
                  : value !== false && (attr += `<p>${value}</p>`);
          return attr;
      }
    ]]]
  extra_styles: >
    #card {
      padding: 0;
      border-width: 0;
      font-family: SF Pro Display, Roboto, system-ui;
    }
    #container {
      display: flex !important;
    }
    #name {
      padding: 1vw 2.5vw 0 var(--custom-layout-card-padding);
      white-space: normal;
      text-align: left;
    }
    .iphone {
      font-size: 1.2em;
      color: rgba(255, 255, 255, 0.8);
    }
    .time {
      font-size: var(--sidebar-time-font-size);
      font-weight: 300;
      line-height: var(--sidebar-time-line-height);
      letter-spacing: 0.11vw;
      margin-left: -0.3vw;
      color: rgba(255, 255, 255, 0.8);
    }
    @supports not (-moz-appearance:none) {
      .time-colon {
        position: relative;
        top: -.11em;
      }
    }
    p {
      font-size: var(--sidebar-font-size);
      line-height: var(--sidebar-line-height);
      font-weight: 200;
      letter-spacing: 0.07vw;
      color: #6a7377;
    }
    b {
      font-weight: 700;
    }
    p > b {
      color: rgba(255, 255, 255, 0.8);
    }
    /* portrait */
    @media screen and (max-width: 1200px) {
      .time {
        font-size: calc(var(--sidebar-time-font-size) * 1.4 );
        line-height: calc(var(--sidebar-time-line-height) * 1.4 );
      }
      p {
        font-size: calc(var(--sidebar-font-size) * 1.4 );
        line-height: calc(var(--sidebar-line-height) * 1.4 );
      }
    }
    /* phone */
    @media screen and (max-width: 800px) {
      .time {
        font-size: calc(var(--sidebar-time-font-size) * 2.3 );
      }
      p {
        font-size: calc(var(--sidebar-font-size) * 2.3 );
        line-height: calc(var(--sidebar-line-height) * 1.4 );
      }
      #name {
        padding: 0;
        text-align: right;
      }
    }
timesidebar:
  show_state: false
  show_icon: false
  name: >
    [[[
      if (entity) {
          let attr = [];
          for (let [k, value] of Object.entries(entity.attributes))
            value !== false && (attr += `<p>${value}</p>`);
          return attr;
      }
    ]]]
  tap_action:
    action: fire-dom-event
    browser_mod:
      service: browser_mod.javascript
      data:
        code: location.reload()
  extra_styles: |
    #card {
      padding: 0;
      border-width: 0;
      margin-top: 24px;
    }
    #container {
      display: block !important;
    }
    #name {
      white-space: normal;
      text-align: left;
      font-family: Poppins;
      padding-inline: 1vw;
    }
    .time {
      font-family: Futura;
      font-size: var(--sidebar-time-font-size);
      font-weight: 300;
      line-height: var(--sidebar-time-line-height);
      letter-spacing: 0.11vw;
      padding-inline: 1vw;
      text-align: center;
      color: rgba(255, 255, 255, 0.7);
    }
    @supports not (-moz-appearance:none) {
      .time-colon {
        position: relative;
        top: -.11em;
      }
    }
    p {
      font-family: Poppins;
      font-size: var(--sidebar-font-size);
      line-height: var(--sidebar-line-height);
      font-weight: 200;
      letter-spacing: 0.06vw;
      color: #97989c;
    }
    p > b {
      color: rgba(255, 255, 255, 0.7);
    }
    /* horizontal */
    @media screen and (min-width: 1441px) {
      #card {
        margin-top: -10px;
      }
      #container {
        margin-left: 10px;
      }
      #name {
        padding-inline: 0;
      }
      .battery, .active, .greet, .time, .holiday {
        display: none !important;
      }
      p {
        line-height: 1.5vw;
        margin-block-end: -0.5em;
      }
    }
    /* portrait */
    @media screen and (max-width: 1440px) {
      #card {
        padding: 5%;
        border-width: 0;
        margin: 0 !important;
      }
      .time {
        font-size: calc(var(--sidebar-time-font-size) * 1.5 );
        line-height: calc(var(--sidebar-time-line-height) * 1.3);
        margin: 0;
        justify-content: center !important;
      }
      .battery {
        display: none !important;
      }
      p {
        font-family: Poppins;
        font-size: calc(var(--sidebar-font-size) * 1.6 );
        line-height: calc(var(--sidebar-line-height) * 1.7 );
        letter-spacing: 0.15vw;
      }
    }
    /* phone */
    @media screen and (max-width: 800px) {
      .time {
        font-size: calc(var(--sidebar-time-font-size) * 2.3 );
      }
      p {
        font-size: calc(var(--sidebar-font-size) * 2.3 );
        line-height: calc(var(--sidebar-line-height) * 2 );
      }
      #name {
        padding: 0;
        text-align: left;
      }
    }

timeclock:
  show_state: false
  show_icon: false
  tap_action: !include ../../shared/popup/calendar.yaml
  double_tap_action:
    action: block
  hold_action:
    action: block
  name: >
    [[[
      if (entity) {
          let attr = [];
          for (let [k, value] of Object.entries(entity.attributes))
            value !== false && (attr += `${value}`);
          return attr;
      }
    ]]]
  # styles:
  #   card:
  #     - background-image: >
  #         [[[
  #           return `url("/local/img/weather/clear-night.png")`;
  #         ]]]
  #     - background-color: none
  #     - background-size: cover
  #     - background-repeat: no-repeat
  #     - background-position: right
  extra_styles: |
    #card {
      padding: 0;
      border-width: 0;
      border-width: 0;
      background: none !important;
    }
    #container {
      display: block !important;
    }
    #name {
      white-space: normal;
      font-family: Poppins;
    }
    .time {
      font-family: Futura;
      font-size: 5em;
      font-weight: 400;
      line-height: 100%;
      letter-spacing: 0.21vw;
      color: rgba(255, 255, 255, 0.5);
      text-shadow: 5px 3px 20px #000000;
    }
    .date, .lunar, .holiday {
      font-size: 0.8em;
      font-weight: 200;
      letter-spacing: 0.05vw;
      color: #97989c;
    }
    @supports not (-moz-appearance:none) {
      .time-colon {
        position: relative;
        top: -.11em;
      }
    }
    .battery, .active, .greet {
      display: none !important;
    }
    /* phone */
    @media screen and (max-width: 800px) {
      #name {
        text-align: -webkit-left !important;
      }
      #date {
        padding-bottom: 0;
      }
      .time {
        font-size: 3em;
        line-height: 100%
      }
      .date, .lunar, .holiday {
        font-size: 0.55em !important;
        margin: 0 0 0 0 !important;
      }
    }
wide_timeclock:
  # aspect_ratio: 2/1
  show_state: false
  show_name: false
  show_label: false
  show_icon: false
  tap_action: !include ../../shared/popup/calendar.yaml
  double_tap_action:
    action: block
  hold_action:
    action: block
  custom_fields:
    day: >
      [[[ return entity.attributes.day; ]]]
    date: >
      [[[ return entity.attributes.date; ]]]
    lunar: >
      [[[ return entity.attributes.lunar; ]]]
    events: >
      [[[ return entity.attributes.events; ]]]
    hour: >
      [[[ return entity.attributes.hour; ]]]
    minute: >
      [[[ return entity.attributes.minutes; ]]]
  styles:
    grid:
      - grid-template-areas: |
          "hour     events    "
          "hour     date   "
          "minute   lunar  "
          "minute   day "
      - grid-template-columns: 1fr 1fr
      - grid-template-rows: repeat(4, min-content)
      - gap: 0%
      - margin: 0
  extra_styles: |
    #card {
      padding: 0;
      border-width: 0;
      background: none !important;
    }
    #container {
      justify-items: flex-start;
      align-items: self-end;
      color: #6b6b6b;
      font-family: poppins;
      font-weight: 600;
      letter-spacing: 1.5px;
    }
    #hour, #minute {
      justify-self: flex-end;
      font-weight: 800;
      line-height: 90%;
      letter-spacing: 2px;
      font-family: Futura;
      padding-right: 0.5vw;
    }
    #hour {
      font-size: 3.5em;
      color: #848e93 !important;
    }
    #minute {
      font-size: 3.3em;
      color: #9c9ba3 !important;
    }
    #day {
      font-size: 1.3em;
      text-transform: uppercase;
      font-weight: 600;
      font-family: futura;
      letter-spacing: 1.5px;
      color: #848e93;
    }
    .marquee {
      animation: marquee 20s cubic-bezier(0.45, 0.05, 0.55, 0.95) infinite;
    }
    @keyframes marquee {
      from {
        transform: translateX(0%);
      }
      to {
        transform: translateX(-50%);
      }
    }
