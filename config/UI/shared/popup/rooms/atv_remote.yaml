action: fire-dom-event
browser_mod:
  service: browser_mod.popup
  data:
    title: 'Apple TV'
    style: >
      --popup-background-color: rgba(0, 0, 0, .2);
      --popup-max-width: calc(450px + 450px);
    card_mod:
      style:
        .: |
          :host {
            --ha-card-border-radius: 12px !important;
            --mush-rgb-state-media-player: 3, 169, 244;
            --mush-rgb-blue-grey: 96, 125, 139;
            --ha-card-background: #ffffff0d !important;
          }
          @media (max-width: 450px), (max-height: 500px) {
            ha-dialog {
              --mdc-dialog-min-width: 100vw !important;
              --mdc-dialog-min-height: 100vh !important;
              --popup-border-radius: 0 !important;
            }
          }
    content:
      type: custom:layout-card
      layout_type: custom:grid-layout
      layout:
        margin: 0
        grid-gap: 10px
        grid-template-columns: 0 430px 430px 0
        grid-template-rows: fit-content(100%)
        grid-template-areas: |
          ". player remote ."
        mediaquery:
          #phone
          '(max-width: 800px)':
            grid-template-columns: 1fr
            grid-template-rows: fit-content(100%) fit-content(100%)
            grid-template-areas: |
              "player"
              "remote"
      cards:
        - type: custom:stack-in-card
          view_layout:
            grid-area: player
          cards:
            - type: custom:mushroom-media-player-card
              entity: media_player.living_room_tv
              icon: mdi:play
              use_media_info: true
              use_media_artwork: false
              show_volume_level: true
              collapsible_controls: true
              media_controls:
                - play_pause_stop
                - previous
                - next
              volume_controls:
                - volume_buttons
                - volume_set
              fill_container: false
              card_mod:
                style: |
                  mushroom-shape-icon {
                    display: flex;
                    {% set media_type = state_attr(config.entity, 'media_content_type') %}
                    {% if media_type == 'tvshow' %}
                      --card-mod-icon: mdi:television-classic;
                      animation: flicker 1s linear infinite alternate;
                    {% elif media_type == 'video' %}
                      --card-mod-icon: mdi:movie-roll;
                      animation: spin 2s linear infinite reverse;
                    {% elif media_type == 'music' %}
                      --card-mod-icon: mdi:music;
                      animation: beat 1.3s ease-out infinite both;
                    {% elif media_type == 'playlist' %}
                      --card-mod-icon: mdi:music;
                      animation: beat 1.3s ease-out infinite both;
                    {% else %}
                      --card-mod-icon: mdi:play;
                    {% endif %}

                    {{ 'animation: none;' if not is_state(config.entity, 'playing') }}
                  }
                  @keyframes flicker {
                    0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--album-art-color), 1); }
                    32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--album-art-color), 0.6); }
                  }
                  @keyframes beat {
                    0%, 60% { --icon-symbol-size: 21px; }
                    5%, 17%, 57% { --icon-symbol-size: 22px; }
                    10%, 20%, 51% { --icon-symbol-size: 23px; }
                    25%, 45% { --icon-symbol-size: 24px; }
                    30%, 39% { --icon-symbol-size: 25px; }
                    33% { --icon-symbol-size: 26px; }
                  }
                  ha-card {
                    --ha-card-border-width: 0;
                    --rgb-state-media-player: var(--album-art-color);
                  }
                  .actions {
                    --rgb-primary-text-color: var(--album-art-color);
                    --primary-text-color: rgb(var(--album-art-color));
                  }
                  ha-card:before {
                    transform: translate3d(0,0,0);
                    -webkit-transform: translate3d(0,0,0);
                    content: "";
                    background: url('/local/img/atv.png') center no-repeat;
                    {% if not is_state('media_player.living_room_tv', 'idle') and not is_state('media_player.living_room_tv', 'off') %}
                    {% set appname = state_attr('media_player.currently_playing', 'app_id') %}
                      {% if appname == 'com.google.ios.youtube' %}
                        background: url( '{{ states.sensor.youtube_watching.attributes.entity_picture }}' ) center no-repeat;
                      {% else %}
                        background: url( '{{ state_attr('media_player.living_room_tv', "entity_picture") }}' ) center no-repeat;
                      {% endif %}
                    {% endif %}
                    background-size: contain;
                    margin: 4px 4px 16px;
                    filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                    border-radius: var(--control-border-radius);
                    aspect-ratio: 16 / 9;
                  }
            - type: conditional
              conditions:
                - entity: media_player.living_room_tv
                  state_not: 'off'
                - entity: media_player.living_room_tv
                  state_not: 'idle'
              card:
                entity: media_player.living_room_tv
                hide:
                  icon: true
                  name: true
                  runtime: true
                  source: true
                  power: true
                  state_label: true
                  volume: true
                  info: true
                  progress: false
                  controls: true
                more_info: false
                type: custom:mini-media-player
                toggle_power: false
                group: true
                card_mod:
                  style:
                    mmp-progress$: |
                      paper-progress {
                        {% if is_state(config.entity, 'playing') %}
                          --paper-progress-container-color: rgba(var(--album-art-color), 0.2) !important;
                        {% endif %}
                      }
                    .: |
                      ha-card {
                        margin: 0px 12px 12px;
                        --mmp-progress-height: 12px !important;
                        height: var(--mmp-progress-height);
                        --mmp-accent-color: rgb(var(--album-art-color));
                        --mmp-border-radius: 12px !important;
                        --ha-card-border-width: 0;
                      }
          card_mod:
            style: |
              ha-card:before {
                transform: translate3d(0,0,0);
                -webkit-transform: translate3d(0,0,0);
                content: "";
                position: absolute;
                height: 100%;
                width: 100%;
                background: url('/local/img/atv.png') center no-repeat;
                {% if not is_state('media_player.living_room_tv', 'idle') and not is_state('media_player.living_room_tv', 'off') %}
                {% set appname = state_attr('media_player.currently_playing', 'app_id') %}
                  {% if appname == 'com.google.ios.youtube' %}
                    background: url( '{{ states.sensor.youtube_watching.attributes.entity_picture }}' ) center no-repeat;
                    {% else %}
                    background: url( '{{ state_attr('media_player.currently_playing', "entity_picture") }}' ) center no-repeat;
                  {% endif %}
                {% endif %}
                filter: blur(150px) saturate(200%);
                background-size: 100% 100%;
              }
              ha-card {
                transform: translate3d(0,0,0);
                -webkit-transform: translate3d(0,0,0);
              }
              :host {
                --album-art-color:
                {% if not is_state('media_player.currently_playing', 'idle') and not is_state('media_player.currently_playing', 'off') and states('sensor.muted_color') not in ['unknown', 'unavaible'] %}
                  {{ states('sensor.muted_color') }}
                {% else %}
                var(--mush-rgb-blue-grey)
                {% endif %};
              }
        - type: grid
          view_layout:
            grid-area: remote
          columns: 4
          square: false
          cards:
            # - type: custom:button-card
            #   entity: media_player.living_room_tv
            #   icon: mdi:volume-mute
            #   tap_action:
            #     action: call-service
            #     service: media_player.volume_mute
            #     service_data:
            #       entity_id: >
            #         [[[ return entity.entity_id; ]]]
            #       is_volume_muted: >
            #         [[[ return entity.attributes.is_volume_muted === 'false' ? 'true' : 'false'; ]]]
            #   template: remote_icon_only

            # - type: custom:button-card
            #   entity: media_player.living_room_tv
            #   icon: mdi:volume-minus
            #   tap_action:
            #     action: call-service
            #     service: media_player.volume_down
            #     service_data:
            #       entity_id: >
            #         [[[ return entity.entity_id; ]]]
            #   template: remote_icon_only

            # - type: custom:button-card
            #   entity: media_player.living_room_tv
            #   icon: mdi:volume-plus
            #   tap_action:
            #     action: call-service
            #     service: media_player.volume_up
            #     service_data:
            #       entity_id: >
            #         [[[ return entity.entity_id; ]]]
            #   template: remote_icon_only

            - type: custom:button-card
              icon: mdi:youtube
              tap_action:
                action: call-service
                service: media_player.select_source
                service_data:
                  entity_id: media_player.living_room_tv
                  source: 'YouTube'
                haptic: light
              template: remote_icon_only

            - type: custom:button-card
              entity: media_player.living_room_tv
              icon: mdi:menu
              tap_action:
                action: call-service
                service: remote.send_command
                service_data:
                  entity_id: remote.atv
                  command: home_hold
              template: remote_icon_only

            - type: custom:button-card
              entity: media_player.living_room_tv
              icon: mdi:arrow-up-drop-circle-outline
              tap_action:
                action: call-service
                service: remote.send_command
                service_data:
                  entity_id: remote.atv
                  command: up
              template: remote_icon_arrow

            - type: custom:button-card
              entity: media_player.sony_bravia_tv
              icon: mdi:power
              tap_action:
                action: call-service
                service: >
                  [[[
                    return variables.state_on
                      ? 'media_player.turn_off'
                      : 'media_player.turn_on';
                  ]]]
                service_data:
                  entity_id: media_player.sony_bravia_tv
              template:
                - remote_icon_arrow
                - loader
              # styles:
              #   card:
              #     - background-color: >
              #         [[[
              #           return variables.state_on
              #             ? 'rgba(206, 245, 149, 0.4)'
              #             : 'rgba(139, 51, 51, 0.9)';
              #         ]]]

            - type: custom:button-card
              entity: media_player.living_room_tv
              icon: mdi:spotify
              tap_action:
                action: call-service
                service: media_player.select_source
                service_data:
                  entity_id: media_player.living_room_tv
                  source: 'Spotify'
                haptic: light
              template: remote_icon_only

            - type: custom:button-card
              entity: media_player.living_room_tv
              icon: mdi:arrow-left-drop-circle-outline
              tap_action:
                action: call-service
                service: remote.send_command
                service_data:
                  entity_id: remote.atv
                  command: left
              template: remote_icon_arrow

            - type: custom:button-card
              entity: media_player.living_room_tv
              icon: mdi:crop-square
              tap_action:
                action: call-service
                service: remote.send_command
                service_data:
                  entity_id: remote.atv
                  command: select
              template: remote_icon_arrow

            - type: custom:button-card
              entity: media_player.living_room_tv
              icon: mdi:arrow-right-drop-circle-outline
              tap_action:
                action: call-service
                service: remote.send_command
                service_data:
                  entity_id: remote.atv
                  command: right
              template: remote_icon_arrow

            - type: custom:button-card
              entity: media_player.living_room_tv
              icon: mdi:netflix
              tap_action:
                action: call-service
                service: media_player.select_source
                service_data:
                  entity_id: media_player.living_room_tv
                  source: 'Netflix'
                haptic: light
              template: remote_icon_only

            - type: custom:button-card
              entity: media_player.living_room_tv
              icon: mdi:keyboard-backspace
              tap_action:
                action: call-service
                service: remote.send_command
                service_data:
                  entity_id: remote.atv
                  command: menu
              template: remote_icon_only

            - type: custom:button-card
              entity: media_player.living_room_tv
              icon: mdi:arrow-down-drop-circle-outline
              tap_action:
                action: call-service
                service: remote.send_command
                service_data:
                  entity_id: remote.atv
                  command: down
              template: remote_icon_arrow

            - type: custom:button-card
              entity: rmedia_player.living_room_tv
              icon: mdi:home
              tap_action:
                action: call-service
                service: remote.send_command
                service_data:
                  entity_id: remote.atv
                  command: home
              template: remote_icon_only

    # content:
    #   type: vertical-stack
    #   cards:
    #     - type: custom:stack-in-card
    #       cards:
    #         - type: custom:mushroom-media-player-card
    #           entity: media_player.currently_playing
    #           icon: mdi:play
    #           use_media_info: true
    #           use_media_artwork: false
    #           show_volume_level: false
    #           media_controls:
    #             - play_pause_stop
    #             - previous
    #             - next
    #           volume_controls:
    #             - volume_buttons
    #             - volume_set
    #           fill_container: false
    #           card_mod:
    #             style: |
    #               mushroom-shape-icon {
    #                 display: flex;
    #                 {% set media_type = state_attr(config.entity, 'media_content_type') %}
    #                 {% if media_type == 'tvshow' %}
    #                   --card-mod-icon: mdi:television-classic;
    #                   animation: flicker 1s linear infinite alternate;
    #                 {% elif media_type == 'video' %}
    #                   --card-mod-icon: mdi:movie-roll;
    #                   animation: spin 2s linear infinite reverse;
    #                 {% elif media_type == 'music' %}
    #                   --card-mod-icon: mdi:music;
    #                   animation: beat 1.3s ease-out infinite both;
    #                 {% elif media_type == 'playlist' %}
    #                   --card-mod-icon: mdi:music;
    #                   animation: beat 1.3s ease-out infinite both;
    #                 {% else %}
    #                   --card-mod-icon: mdi:play;
    #                 {% endif %}

    #                 {{ 'animation: none;' if not is_state(config.entity, 'playing') }}
    #               }
    #               @keyframes flicker {
    #                 0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--album-art-color), 1); }
    #                 32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--album-art-color), 0.6); }
    #               }
    #               @keyframes beat {
    #                 0%, 60% { --icon-symbol-size: 21px; }
    #                 5%, 17%, 57% { --icon-symbol-size: 22px; }
    #                 10%, 20%, 51% { --icon-symbol-size: 23px; }
    #                 25%, 45% { --icon-symbol-size: 24px; }
    #                 30%, 39% { --icon-symbol-size: 25px; }
    #                 33% { --icon-symbol-size: 26px; }
    #               }
    #               ha-card {
    #                 --ha-card-border-width: 0;
    #                 --rgb-state-media-player: var(--album-art-color);
    #               }
    #               .actions {
    #                 --rgb-primary-text-color: var(--album-art-color);
    #                 --primary-text-color: rgb(var(--album-art-color));
    #               }
    #               ha-card:before {
    #                 transform: translate3d(0,0,0);
    #                 -webkit-transform: translate3d(0,0,0);
    #                 {% if not is_state(config.entity, 'idle') and not is_state(config.entity, 'off') %}
    #                   content: "";
    #                 {% endif %}

    #                 {% if not is_state('media_player.currently_playing', 'idle') and not is_state('media_player.currently_playing', 'off') %}
    #                 {% set source = state_attr('media_player.currently_playing', 'source') %}
    #                 {% set appname = state_attr('media_player.currently_playing', 'app_id') %}
    #                   {% if source == 'YouTube' %}
    #                     background: url( '{{ states.sensor.shieldtv_youtube_watching.attributes.entity_picture }}' ) center no-repeat;
    #                     {% elif appname == 'com.google.ios.youtube' %}
    #                     background: url( '{{ states.sensor.youtube_watching.attributes.entity_picture }}' ) center no-repeat;
    #                     {% else %}
    #                     background: url( '{{ state_attr('media_player.currently_playing', "entity_picture") }}' ) center no-repeat;
    #                   {% endif %}
    #                 {% endif %}
    #                 background-size: contain;
    #                 margin: 4px 4px 16px;
    #                 filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
    #                 border-radius: var(--control-border-radius);

    #                 {% set active_child = state_attr(config.entity, 'active_child') %}
    #                 {% if active_child == 'media_player.spotify' %}
    #                   aspect-ratio: 1 / 1;
    #                 {% elif active_child == 'media_player.living_room_tv' %}
    #                   aspect-ratio: 16 / 9;
    #                 {% elif active_child == 'media_player.bedroom_tv' %}
    #                   aspect-ratio: 2 / 3;
    #                 {% else %}
    #                   aspect-ratio: 1 / 1;
    #                 {% endif %}
    #               }
    #         - type: conditional
    #           conditions:
    #             - entity: media_player.currently_playing
    #               state_not: 'off'
    #             - entity: media_player.currently_playing
    #               state_not: idle
    #           card:
    #             entity: media_player.currently_playing
    #             hide:
    #               icon: true
    #               name: true
    #               runtime: true
    #               source: true
    #               power: true
    #               state_label: true
    #               volume: true
    #               info: true
    #               progress: false
    #               controls: true
    #             more_info: false
    #             type: custom:mini-media-player
    #             toggle_power: false
    #             group: true
    #             card_mod:
    #               style:
    #                 mmp-progress$: |
    #                   paper-progress {
    #                     {% if is_state(config.entity, 'playing') %}
    #                       --paper-progress-container-color: rgba(var(--album-art-color), 0.2) !important;
    #                     {% endif %}
    #                   }
    #                 .: |
    #                   ha-card {
    #                     margin: 0px 12px 12px;
    #                     --mmp-progress-height: 12px !important;
    #                     height: var(--mmp-progress-height);
    #                     --mmp-accent-color: rgb(var(--album-art-color));
    #                     --mmp-border-radius: 12px !important;
    #                     --ha-card-border-width: 0;
    #                   }
    #       card_mod:
    #         style: |
    #           ha-card:before {
    #             transform: translate3d(0,0,0);
    #             -webkit-transform: translate3d(0,0,0);
    #             content: "";
    #             position: absolute;
    #             height: 100%;
    #             width: 100%;
    #             background: url('/local/idle_art.png') center no-repeat;
    #             {% if not is_state('media_player.currently_playing', 'idle') and not is_state('media_player.currently_playing', 'off') %}
    #             {% set source = state_attr('media_player.currently_playing', 'source') %}
    #             {% set appname = state_attr('media_player.currently_playing', 'app_id') %}
    #               {% if source == 'YouTube' %}
    #                 background: url( '{{ states.sensor.shieldtv_youtube_watching.attributes.entity_picture }}' ) center no-repeat;
    #                 {% elif appname == 'com.google.ios.youtube' %}
    #                 background: url( '{{ states.sensor.youtube_watching.attributes.entity_picture }}' ) center no-repeat;
    #                 {% else %}
    #                 background: url( '{{ state_attr('media_player.currently_playing', "entity_picture") }}' ) center no-repeat;
    #               {% endif %}
    #             {% endif %}
    #             filter: blur(150px) saturate(200%);
    #             background-size: 100% 100%;
    #           }
    #           ha-card {
    #             transform: translate3d(0,0,0);
    #             -webkit-transform: translate3d(0,0,0);
    #           }
    #           :host {
    #             --album-art-color:
    #             {% if not is_state('media_player.currently_playing', 'idle') and not is_state('media_player.currently_playing', 'off') and states('sensor.muted_color') not in ['unknown', 'unavaible'] %}
    #               {{ states('sensor.muted_color') }}
    #             {% else %}
    #             var(--mush-rgb-blue-grey)
    #             {% endif %};
    #           }

    #     - type: grid
    #       columns: 4
    #       cards:
    #         - type: custom:button-card
    #           icon: mdi:youtube
    #           tap_action:
    #             action: call-service
    #             service: media_player.select_source
    #             service_data:
    #               entity_id: media_player.living_room_tv
    #               source: 'YouTube'
    #             haptic: light
    #           template: remote_icon_only

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:volume-mute
    #           tap_action:
    #             action: call-service
    #             service: media_player.volume_mute
    #             service_data:
    #               entity_id: >
    #                 [[[ return entity.entity_id; ]]]
    #               is_volume_muted: >
    #                 [[[ return entity.attributes.is_volume_muted === 'false' ? 'true' : 'false'; ]]]
    #           template: remote_icon_only

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:volume-minus
    #           tap_action:
    #             action: call-service
    #             service: media_player.volume_down
    #             service_data:
    #               entity_id: >
    #                 [[[ return entity.entity_id; ]]]
    #           template: remote_icon_only

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:volume-plus
    #           tap_action:
    #             action: call-service
    #             service: media_player.volume_up
    #             service_data:
    #               entity_id: >
    #                 [[[ return entity.entity_id; ]]]
    #           template: remote_icon_only

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:kodi
    #           tap_action:
    #             action: call-service
    #             service: media_player.select_source
    #             service_data:
    #               entity_id: media_player.living_room_tv
    #               source: 'Kodi'
    #             haptic: light
    #           template: remote_icon_only

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:menu
    #           tap_action:
    #             action: call-service
    #             service: remote.send_command
    #             service_data:
    #               entity_id: remote.atv
    #               command: home_hold
    #           template: remote_icon_only

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:arrow-up-drop-circle-outline
    #           tap_action:
    #             action: call-service
    #             service: remote.send_command
    #             service_data:
    #               entity_id: remote.atv
    #               command: up
    #           template: remote_icon_arrow

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:power
    #           tap_action:
    #             action: call-service
    #             service: script.turn_on
    #             service_data:
    #               entity_id: script.atv_turn_on_off
    #           template:
    #             - remote_icon_arrow
    #             - loader
    #           styles:
    #             card:
    #               - background: >
    #                   [[[
    #                     return variables.state_on
    #                       ? 'rgba(206, 245, 149, 0.4)'
    #                       : 'rgba(139, 51, 51, 0.9)';
    #                   ]]]

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:spotify
    #           tap_action:
    #             action: call-service
    #             service: media_player.select_source
    #             service_data:
    #               entity_id: media_player.living_room_tv
    #               source: 'Spotify'
    #             haptic: light
    #           template: remote_icon_only

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:arrow-left-drop-circle-outline
    #           tap_action:
    #             action: call-service
    #             service: remote.send_command
    #             service_data:
    #               entity_id: remote.atv
    #               command: left
    #           template: remote_icon_arrow

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:crop-square
    #           tap_action:
    #             action: call-service
    #             service: remote.send_command
    #             service_data:
    #               entity_id: remote.atv
    #               command: select
    #           template: remote_icon_arrow

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:arrow-right-drop-circle-outline
    #           tap_action:
    #             action: call-service
    #             service: remote.send_command
    #             service_data:
    #               entity_id: remote.atv
    #               command: right
    #           template: remote_icon_arrow

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:netflix
    #           tap_action:
    #             action: call-service
    #             service: media_player.select_source
    #             service_data:
    #               entity_id: media_player.living_room_tv
    #               source: 'Netflix'
    #             haptic: light
    #           template: remote_icon_only

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:keyboard-backspace
    #           tap_action:
    #             action: call-service
    #             service: remote.send_command
    #             service_data:
    #               entity_id: remote.atv
    #               command: menu
    #           template: remote_icon_only

    #         - type: custom:button-card
    #           entity: media_player.living_room_tv
    #           icon: mdi:arrow-down-drop-circle-outline
    #           tap_action:
    #             action: call-service
    #             service: remote.send_command
    #             service_data:
    #               entity_id: remote.atv
    #               command: down
    #           template: remote_icon_arrow

    #         - type: custom:button-card
    #           entity: rmedia_player.living_room_tv
    #           icon: mdi:home
    #           tap_action:
    #             action: call-service
    #             service: remote.send_command
    #             service_data:
    #               entity_id: remote.atv
    #               command: home
    #           template: remote_icon_only
